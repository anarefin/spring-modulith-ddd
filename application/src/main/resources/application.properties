# Application Configuration
spring.application.name=modular-monolith-poc
server.port=8080

# PostgreSQL Configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/modular_monolith_db
spring.datasource.username=admin
spring.datasource.password=admin123
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Enable SQL initialization
spring.sql.init.mode=always

# Logging
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.level.com.demo.modular=DEBUG

# Spring Modulith Configuration
spring.modulith.detection-strategy=explicitly-annotated

# Actuator Configuration for Modulith and Resilience4j
management.endpoints.web.exposure.include=health,info,modulith,metrics,prometheus,circuitbreakers,circuitbreakerevents,ratelimiters,retries
management.endpoint.modulith.enabled=true
management.endpoint.health.show-details=always
management.health.modulith.enabled=true
management.health.circuitbreakers.enabled=true
management.health.ratelimiters.enabled=true

# Module Events Configuration (for future use)
spring.modulith.events.enabled=true
spring.modulith.republish-outstanding-events-on-restart=true

# Resilience4j Circuit Breaker Configuration
resilience4j.circuitbreaker.configs.default.registerHealthIndicator=true
resilience4j.circuitbreaker.configs.default.slidingWindowSize=10
resilience4j.circuitbreaker.configs.default.minimumNumberOfCalls=5
resilience4j.circuitbreaker.configs.default.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.configs.default.automaticTransitionFromOpenToHalfOpenEnabled=true
resilience4j.circuitbreaker.configs.default.waitDurationInOpenState=10s
resilience4j.circuitbreaker.configs.default.failureRateThreshold=50
resilience4j.circuitbreaker.configs.default.eventConsumerBufferSize=10
resilience4j.circuitbreaker.configs.default.recordExceptions=java.lang.Exception
resilience4j.circuitbreaker.configs.default.ignoreExceptions=java.lang.IllegalArgumentException

# Circuit Breaker instances for inter-module calls
resilience4j.circuitbreaker.instances.productService.baseConfig=default
resilience4j.circuitbreaker.instances.orderService.baseConfig=default

# Resilience4j Retry Configuration
resilience4j.retry.configs.default.maxAttempts=3
resilience4j.retry.configs.default.waitDuration=500ms
resilience4j.retry.configs.default.enableExponentialBackoff=true
resilience4j.retry.configs.default.exponentialBackoffMultiplier=2
resilience4j.retry.configs.default.retryExceptions=java.net.SocketTimeoutException,java.io.IOException
resilience4j.retry.configs.default.ignoreExceptions=java.lang.IllegalArgumentException

# Retry instances for inter-module calls
resilience4j.retry.instances.productService.baseConfig=default
resilience4j.retry.instances.productService.maxAttempts=3
resilience4j.retry.instances.orderService.baseConfig=default
resilience4j.retry.instances.orderService.maxAttempts=2

# Resilience4j Time Limiter Configuration
resilience4j.timelimiter.configs.default.timeoutDuration=5s
resilience4j.timelimiter.configs.default.cancelRunningFuture=true

# Time Limiter instances
resilience4j.timelimiter.instances.productService.baseConfig=default
resilience4j.timelimiter.instances.orderService.baseConfig=default

# Resilience4j Rate Limiter Configuration
resilience4j.ratelimiter.configs.default.registerHealthIndicator=true
resilience4j.ratelimiter.configs.default.limitForPeriod=50
resilience4j.ratelimiter.configs.default.limitRefreshPeriod=1s
resilience4j.ratelimiter.configs.default.timeoutDuration=100ms
resilience4j.ratelimiter.configs.default.eventConsumerBufferSize=100

# Rate Limiter instances
resilience4j.ratelimiter.instances.productService.baseConfig=default
resilience4j.ratelimiter.instances.orderService.baseConfig=default

# Distributed Tracing Configuration
management.tracing.sampling.probability=1.0
management.zipkin.tracing.endpoint=http://localhost:9411/api/v2/spans
logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]

# Metrics export to Prometheus
management.metrics.export.prometheus.enabled=true
management.endpoint.prometheus.enabled=true
